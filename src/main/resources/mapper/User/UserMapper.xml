<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbr.dao.user.UserDAO" >

    <resultMap id="BaseResultMap" type="com.hbr.model.User.User" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
        <result column="mobile_phone" property="mobilePhone" jdbcType="INTEGER" />
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
        <result column="role" property="role" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, user_name, password, mailbox, nick_name, status, creat_time, last_login_time, 
        mobile_phone, birthday, role
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from t_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.hbr.model.User.User" >
        insert into t_user (id, user_name, password, 
            mailbox, nick_name, status, 
            creat_time, last_login_time, mobile_phone, 
            birthday, role)
        values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
            #{mailbox,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
            #{creatTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{mobilePhone,jdbcType=INTEGER}, 
            #{birthday,jdbcType=TIMESTAMP}, #{role,jdbcType=TINYINT})
    </insert>

    <insert id="insertSelective" parameterType="com.hbr.model.User.User" >
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="userName != null" >
                user_name,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="mailbox != null" >
                mailbox,
            </if>
            <if test="nickName != null" >
                nick_name,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="creatTime != null" >
                creat_time,
            </if>
            <if test="lastLoginTime != null" >
                last_login_time,
            </if>
            <if test="mobilePhone != null" >
                mobile_phone,
            </if>
            <if test="birthday != null" >
                birthday,
            </if>
            <if test="role != null" >
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="mailbox != null" >
                #{mailbox,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null" >
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="creatTime != null" >
                #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null" >
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mobilePhone != null" >
                #{mobilePhone,jdbcType=INTEGER},
            </if>
            <if test="birthday != null" >
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="role != null" >
                #{role,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hbr.model.User.User" >
        update t_user
        <set >
            <if test="userName != null" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="mailbox != null" >
                mailbox = #{mailbox,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null" >
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="creatTime != null" >
                creat_time = #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null" >
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mobilePhone != null" >
                mobile_phone = #{mobilePhone,jdbcType=INTEGER},
            </if>
            <if test="birthday != null" >
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.hbr.model.User.User" >
        update t_user
        set user_name = #{userName,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            mailbox = #{mailbox,jdbcType=VARCHAR},
            nick_name = #{nickName,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            creat_time = #{creatTime,jdbcType=TIMESTAMP},
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            mobile_phone = #{mobilePhone,jdbcType=INTEGER},
            birthday = #{birthday,jdbcType=TIMESTAMP},
            role = #{role,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>